mutate(report_date = mdy(report_date)) %>%
mutate(lat = lat_deg,
lon = lon_deg) %>%
separate(water_tech, into = c("water_tech", "brand"), sep = "-")
water %>%
mutate(report_date = mdy(report_date)) %>%
mutate(lat = lat_deg,
lon = lon_deg)
water %>%
mutate(report_date = mdy(report_date)) %>%
mutate(lat = lat_deg,
lon = lon_deg) %>%
separate(water_tech, into = c("water_tech", "brand"), sep = "-")
water %>%
filter(install_year > 1980) %>%
count(install_year)
water %>%
filter(install_year > 1980) %>%
count(install_year) %>%
ggplot() +
geom_col(aes(x = install_yeat, y = n))
water %>%
filter(install_year > 1980) %>%
count(install_year) %>%
ggplot() +
geom_col(aes(x = install_year, y = n))
water %>%
mutate(report_date = mdy(report_date)) %>%
rename(lat = lat_deg,
lon = lon_deg) %>%
separate(water_tech, into = c("water_tech", "brand"), sep = "-") %>%
mutate(install_year = ifelse(install_year > 2022, NA, install_year))
water_raw = tt$water
water = water_raw %>%
mutate(report_date = mdy(report_date)) %>%
rename(lat = lat_deg,
lon = lon_deg) %>%
separate(water_tech, into = c("water_tech", "brand"), sep = "-") %>%
mutate(install_year = ifelse(install_year > 2022, NA, install_year))
water %>%
filter(install_year > 1980) %>%
count(install_year) %>%
ggplot() +
geom_col(aes(x = install_year, y = n))
water %>%
count(country)
water
water %>%
count(country_name, sort = TRUE)
water = water_raw %>%
mutate(report_date = mdy(report_date)) %>%
rename(lat = lat_deg,
lon = lon_deg,
country = country_name) %>%
separate(water_tech, into = c("water_tech", "brand"), sep = "-") %>%
mutate(install_year = ifelse(install_year > 2022, NA, install_year))
water %>%
group_by(country) %>%
summarise(lat_mean = mean(lat),
lon_mean = mean(lon)) %>%
ggplot() +
geom_point(aes(x = lon_mean, y = lat_mean))
water %>%
group_by(country) %>%
summarise(lat_mean = mean(lat),
lon_mean = mean(lon)) %>%
ggplot() +
geom_point(aes(x = lon_mean, y = lat_mean)) +
geom_text(text = country)
water %>%
group_by(country) %>%
summarise(lat_mean = mean(lat),
lon_mean = mean(lon)) %>%
ggplot() +
geom_point(aes(x = lon_mean, y = lat_mean)) +
geom_text()
water %>%
group_by(country) %>%
summarise(lat_mean = mean(lat),
lon_mean = mean(lon)) %>%
ggplot() +
geom_point(aes(x = lon_mean, y = lat_mean)) +
geom_text(aes(x = lon_mean, y = lat_mean, text = country))
water %>%
group_by(country) %>%
summarise(lat_mean = mean(lat),
lon_mean = mean(lon)) %>%
ggplot() +
geom_point(aes(x = lon_mean, y = lat_mean)) +
geom_text(aes(x = lon_mean, y = lat_mean, label = country))
water %>%
group_by(country) %>%
summarise(lat_mean = mean(lat),
lon_mean = mean(lon)) %>%
ggplot() +
geom_point(aes(x = lon_mean, y = lat_mean)) +
geom_text(aes(x = lon_mean, y = lat_mean, label = country))
water = water_raw %>%
mutate(report_date = mdy(report_date)) %>%
rename(lat = lat_deg,
lon = lon_deg,
country = country_name) %>%
separate(water_tech, into = c("water_tech", "brand"), sep = "-") %>%
mutate(install_year = ifelse(install_year > 2022, NA, install_year)) %>%
filter(!country %in% c("Peru"),
!is.na(country))
water = water_raw %>%
mutate(report_date = mdy(report_date)) %>%
rename(lat = lat_deg,
lon = lon_deg,
country = country_name) %>%
separate(water_tech, into = c("water_tech", "brand"), sep = "-") %>%
mutate(install_year = ifelse(install_year > 2022, NA, install_year)) %>%
filter(!country %in% c("Peru","Dominican Republic", "Timor-Leste"),
!is.na(country))
water %>%
group_by(country) %>%
summarise(lat_mean = mean(lat),
lon_mean = mean(lon)) %>%
ggplot() +
geom_point(aes(x = lon_mean, y = lat_mean)) +
geom_text(aes(x = lon_mean, y = lat_mean, label = country))
water = water_raw %>%
mutate(report_date = mdy(report_date)) %>%
rename(lat = lat_deg,
lon = lon_deg,
country = country_name) %>%
separate(water_tech, into = c("water_tech", "brand"), sep = "-") %>%
mutate(install_year = ifelse(install_year > 2022, NA, install_year)) %>%
filter(!country %in% c("Peru","Dominican Republic", "Timor-Leste"),
!is.na(country)) %>%
filter(between(lat, -35, 37),
between(lon, -40, 60))
map_data("world")
map_data("world") %>%
as_tibble()
map_data("world") %>%
as_tibble() %>%
mutate(continent = countrycode(region, "country.name", "continent"))
library(ggthemes)
map_data("world") %>%
as_tibble() %>%
mutate(continent = countrycode(region, "country.name", "continent"))
library(countrycode)
install.packages("countrycode")
library(countrycode)
map_data("world") %>%
as_tibble() %>%
mutate(continent = countrycode(region, "country.name", "continent"))
map_data("world") %>%
as_tibble() %>%
mutate(continent = countrycode(region, "country.name", "continent")) %>%
filter(continent = "Africa")
map_data("world") %>%
as_tibble() %>%
mutate(continent = countrycode(region, "country.name", "continent")) %>%
filter(continent == "Africa")
africa_map_data  = map_data("world") %>%
as_tibble() %>%
mutate(continent = countrycode(region, "country.name", "continent")) %>%
filter(continent == "Africa")
africa_map_data
water
africa_map_data
water %>%
sample_n(10000) %>%
ggplot() +
geom_point(aes(x = lon, y = lat), alpha = 0.3, size = 0.1) +
geom_polygon(aes(x = lat, y = long, group = group)) +
theme_map()
water %>%
sample_n(10000) %>%
ggplot() +
geom_point(aes(x = lon, y = lat), alpha = 0.3, size = 0.1) +
geom_polygon(aes(x = lat, y = long, group = group), data = africa_map_data) +
theme_map()
water %>%
sample_n(10000) %>%
ggplot() +
geom_point(aes(x = lon, y = lat), alpha = 0.3, size = 0.1) +
geom_polygon(aes(x = lat, y = long, group = group),
fill = "white",
data = africa_map_data) +
theme_map()
water %>%
sample_n(10000) %>%
ggplot() +
geom_point(aes(x = lon, y = lat), alpha = 0.3, size = 0.1) +
geom_polygon(aes(x = lat, y = long, group = group),
fill = "white",
color = "grey",
data = africa_map_data) +
theme_map()
water %>%
sample_n(10000) %>%
ggplot() +
geom_point(aes(x = lon, y = lat), alpha = 0.3, size = 0.1) +
geom_polygon(aes(x = lat, y = long, group = group),
fill = "white",
color = "grey",
data = africa_map_data) +
theme_map() +
coord_fixed()
water %>%
sample_n(10000) %>%
ggplot() +
geom_point(aes(x = lon, y = lat), alpha = 0.3, size = 0.1) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white",
color = "grey",
data = africa_map_data) +
theme_map() +
coord_fixed()
water %>%
sample_n(10000) %>%
ggplot() +
geom_point(aes(x = lon, y = lat), alpha = 0.3, size = 0.1) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white",
color = "grey",
data = africa_map_data) +
theme_map()
water %>%
sample_n(10000) %>%
ggplot(aes(lon, lat)) +
geom_polygon(aes(long, lat, group = group),
color = "gray",
fill = "white",
data = africa_map_data,
size = .25) +
geom_point(size = .1, alpha = .25) +
theme_map()
water %>%
sample_n(10000) %>%
ggplot(aes(x = lon, y = lat)) +
geom_point(alpha = 0.3, size = 0.1) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white",
color = "grey",
data = africa_map_data) +
theme_map()
water %>%
sample_n(20000) %>%
ggplot(aes(x = lon, y = lat)) +
geom_point(alpha = 0.3, size = 0.1) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white",
color = "grey",
data = africa_map_data) +
theme_map()
water %>%
sample_n(20000) %>%
ggplot(aes(x = lon, y = lat)) +
geom_point(size = .1, alpha = .25) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white",
color = "grey",
data = africa_map_data) +
theme_map()
water %>%
sample_n(20000) %>%
ggplot(aes(x = lon, y = lat)) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white",
color = "grey",
data = africa_map_data) +
geom_point(size = .1, alpha = .25) +
theme_map()
water %>%
sample_n(10000) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white",
color = "grey",
data = africa_map_data) +
geom_point(aes(x = lon, y = lat),size = .1, alpha = .25) +
theme_map()
water_uganda = water %>%
filter(country == "Uganda",
betweent(lat, -2,4),
between(lon, 29,40))
water_uganda = water %>%
filter(country == "Uganda",
between(lat, -2,4),
between(lon, 29,40))
library(tidyverse)
library(tidytuesdayR)
library(lubridate)
library(countrycode)
theme_set(theme_light())
tt <- tt_load("2019-06-04")
water_raw = tt$ramen_ratings
ramen  = tt$ramen_ratings
ramen
?pivot_longer
ramen %>%
pivot_longer(cols = brand:country,names_to = "variable")
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value)
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup()
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup() %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category)
coord_flip()
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup() %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category) +
coord_flip()
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup() %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category, "free_y") +
coord_flip()
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup() %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category, scales =  "free_y") +
coord_flip()
library(tidyverse)
library(tidytuesdayR)
library(lubridate)
library(countrycode)
theme_set(theme_light())
tt <- tt_load("2019-06-04")
ramen = tt$ramen_ratings
ramen
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup() %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category, scales =  "free_y") +
coord_flip()
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup()
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup() %>%
mutate(value = reorder_within(value, n, category) %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category, scales =  "free_y") +
scale_x_reordered()
coord_flip()
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup() %>%
mutate(value = reorder_within(value, n, category) %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category, scales =  "free_y") +
scale_x_reordered() +
coord_flip()
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup() %>%
mutate(value = reorder_within(value, n, category)) %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category, scales =  "free_y") +
scale_x_reordered() +
coord_flip()
library(tidyverse)
library(tidytuesdayR)
library(lubridate)
library(countrycode)
library(drlib)
install.packages("drlib")
library(tidyverse)
library(tidytuesdayR)
library(lubridate)
library(countrycode)
library(drlib)
install.packages("drlib")
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup() %>%
mutate(value = reorder_within(value, n, category)) %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category, scales =  "free_y") +
scale_x_reordered() +
coord_flip()
library(tidytext)
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(20, n) %>%
ungroup() %>%
mutate(value = reorder_within(value, n, category)) %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category, scales =  "free_y") +
scale_x_reordered() +
coord_flip()
ramen %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(16, n) %>%
ungroup() %>%
mutate(value = reorder_within(value, n, category)) %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category, scales =  "free_y") +
scale_x_reordered() +
coord_flip()
ramen_ratings_processed = ramen %>%
mutate(style = fct_lump(style,4),
country = fct_lump(country,12),
brand = fcgt_lump(brand, 20)) %>%
replace_na(list(style = "Other"))
ramen_ratings_processed = ramen %>%
mutate(style = fct_lump(style,4),
country = fct_lump(country,12),
brand = fct_lump(brand, 20)) %>%
replace_na(list(style = "Other"))
ramen_ratings_processed %>%
pivot_longer(cols = brand:country,names_to = "category") %>%
count(category, value) %>%
group_by(category) %>%
top_n(16, n) %>%
ungroup() %>%
mutate(value = reorder_within(value, n, category)) %>%
ggplot() +
geom_col(aes(x = value , y = n)) +
facet_wrap(~category, scales =  "free_y") +
scale_x_reordered() +
coord_flip()
install.packages("rvest")
ramen_list <- read_html("https://www.theramenrater.com/resources-2/the-list/")
library(rvest)
ramen_list <- read_html("https://www.theramenrater.com/resources-2/the-list/")
knitr::opts_knit$set(root.dir = "/Users/liangsiyu/Adeline Research Dropbox/Liang Siyu/COVID19-policies")
getwd()
library(tidyverse)
library(tidyverse)
library(tidytext)
read_csv("https://www.dropbox.com/home/COVID19-policies/Data/CDC-deathsbyrace?preview=AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv“)
read_csv("https://www.dropbox.com/home/COVID19-policies/Data/CDC-deathsbyrace?preview=AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv“)
read_csv("https://www.dropbox.com/home/COVID19-policies/Data/CDC-deathsbyrace?preview=AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv“)
read_csv("https://www.dropbox.com/home/COVID19-policies/Data/CDC-deathsbyrace?preview=AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv“)
library(tidyverse)
library(tidytext)
read_csv("https://www.dropbox.com/home/COVID19-policies/Data/CDC-deathsbyrace?preview=AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv")
con <- url("https://www.dropbox.com/home/COVID19-policies/Data/CDC-deathsbyrace?preview=AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv", "rb")
lego_movie <- read_html(con)
lego_movie <- read_csv(con)
lego_movie
library(rvest)
lego_movie <- read_html(con)
read_csv("https://www.dropbox.com/home/COVID19-policies/Data/CDC-deathsbyrace?preview=AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv")
options(timeout = 4000000)
read_csv("https://www.dropbox.com/home/COVID19-policies/Data/CDC-deathsbyrace?preview=AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv")
options(timeout = 4000000)
read_csv("https://www.dropbox.com/home/COVID19-policies/Data/CDC-deathsbyrace?preview=AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv")
read_csv("https://github.com/hchen549/covidrace/blob/master/data/AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv")
setwd("C:/Users/haomi/OneDrive/Documents/2021_Summer/covid")
read_csv("C:\Users\haomi\OneDrive\Documents\2021_Summer\covid\data\AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv")
read_csv("data/AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv")
excess_death = read_csv("data/AH_Quarterly_Excess_Deaths_by_State__Sex__Age__and_Race.csv")
excess_death
excess_death
read_csv("data/Single-Race Population Estimates 2010-2019 by State and Single-Year Age (21).txt")
